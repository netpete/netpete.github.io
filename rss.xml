<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Elegantly Kludgey</title><link>https://netpete.github.io/</link><description>Records of my development</description><atom:link href="https://netpete.github.io/rss.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Mon, 01 Jun 2015 19:37:14 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>2 in 1 Setup or How to get away with only 32GB</title><link>https://netpete.github.io/posts/2-in-1-setup-or-how-to-get-away-with-only-32gb.html</link><dc:creator>Peter Tiegs</dc:creator><description>&lt;div&gt;&lt;p&gt;I recently decided to pick up a Windows machine and I really liked the idea of having a &lt;a class="reference external" href="http://www.intel.com/content/www/us/en/homepage.html"&gt;2 in 1&lt;/a&gt;.  So I did my research and purchased an &lt;a class="reference external" href="http://us.acer.com/ac/en/US/content/series/aspireswitch11"&gt;Acer&lt;/a&gt; Switch 11.  Overall I have been very happy with this little laptop/tablet.  Knowing that I would be using this for development I got the model with a 500GB HD in the keyboard.  Unfortunately this model only came with 32GB on the primary disk.&lt;/p&gt;
&lt;p&gt;My end goal was to be able to install &lt;a class="reference external" href="http://www.visualstudio.com"&gt;Visual Studio Community Edition&lt;/a&gt; on this machine for use in the Laptop mode, but not necessarily in tablet mode.&lt;/p&gt;
&lt;p&gt;The first thing I tried to do was to remove the recovery partition.  For some reason the OEM version of Windows provided with the Acer Switch did not allow for that.  Every time I tried to remove the partition it would prevent the OS from booting.  A quick Google search showed that this was a fairly common problem.  Fortunately I had a retail version Windows, so I hooked up a USB DVD drive and started from scratch.  I was able to create single partition for the OS and start the install.  Everything worked great...&lt;/p&gt;
&lt;p&gt;...Almost, when the retail version of Windows booted the touch screen was no longer working.  So back to the Acer site and a quick download and install of the Intel platform drivers got everything back to working.  I still did not have Visual Studio installed.&lt;/p&gt;
&lt;p&gt;My first attempted at installing Visual Studio to the D: drive failed.  While the primary interface was installed on the D: drive the bulk of the other content is still installed on the C: drive.  So I still need more space.  Next I added in a 64GB micro SD card and Robocopy'd my users directory to it.  To do this I created a local user with admin privileges and logged in as him. Then I removed the original home directory, and created a link to the home directory on the F: drive.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_1f5235f634144df392ba8509aa1071ff-1"&gt;&lt;/a&gt;robocopy /COPYALL /MIR /XJ c:\Users\Peter f:\Users\Peter
&lt;a name="rest_code_1f5235f634144df392ba8509aa1071ff-2"&gt;&lt;/a&gt;rd /S /Q c:\Users\Peter
&lt;a name="rest_code_1f5235f634144df392ba8509aa1071ff-3"&gt;&lt;/a&gt;mklink /J c:\Users\Peter f:\Users\Peter
&lt;/pre&gt;&lt;p&gt;When that was done I logged back in as myself, removed the local user and everything is working again.  But I still don't have a working version of Visual Studio.  I needed more space.  Then I downloaded &lt;a class="reference external" href="http://windirstat.info/"&gt;WinDirStat&lt;/a&gt; to analyze what was eating the most space.  It was the Visual Studio Package Cache in the ProgramData directory.  I had read that this was not something that should be removed and that it was needed for Visual Studio to work.  So I applied the same process that I used with my home directory to the package cache.  Robocopy the files to the D: drive, remove the files from the C: drive and link the D: drive files back to C: drive.  Now I was able to repair the installation of Visual Studio and fire it up.&lt;/p&gt;
&lt;p&gt;I did this process two more times with the Windows SDKs and Microsoft Kits and now I have a healthy 3GB of the 32GB on the C: drive my users directory has over 50GB left on in and Visual Studio work when I am docked with the Keyboard and actually need it.&lt;/p&gt;
&lt;p&gt;I was always an extensive user of the &lt;code&gt;ln -s&lt;/code&gt; soft links in Posix operating system.  I am not sure when &lt;code&gt;mklink&lt;/code&gt; got added to the OS but I really appreciate the capabilities it provides.&lt;/p&gt;&lt;/div&gt;</description><guid>https://netpete.github.io/posts/2-in-1-setup-or-how-to-get-away-with-only-32gb.html</guid><pubDate>Wed, 27 May 2015 17:35:51 GMT</pubDate></item><item><title>Combining Nikola with Vim Riv</title><link>https://netpete.github.io/posts/combining-nikola-with-vim-riv.html</link><dc:creator>Peter Tiegs</dc:creator><description>&lt;div&gt;&lt;p&gt;I use &lt;a class="reference external" href="https://github.com/Rykka/riv.vim"&gt;Riv&lt;/a&gt; (RestructuredText in Vim) for all of my note taking.  I especially use the Scratch feature to create automatically time stamped entries.  The main reason I use Riv is that I can have all of my notes in a repository (Mercurial or Git).   Riv bills itself as working well with Nikola and Pelican so I decided I would try it out.&lt;/p&gt;
&lt;p&gt;My Goal was to continue to use RIV for my note taking and use &lt;a class="reference external" href="http://getnikola.com"&gt;Nikola&lt;/a&gt; to render the site to share with teammates.&lt;/p&gt;
&lt;p&gt;I wanted to see how well these tools can be integrated with out modifying the code of either one.&lt;/p&gt;
&lt;p&gt;I was able to initialize a Nikola site into my Riv Project directory.  The first thing I attempted was to simply add the Scratch directory to the posts.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_e878245f02974e44a238dbadcae3eb78-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;POSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_e878245f02974e44a238dbadcae3eb78-2"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"posts/*.rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"blog"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"post.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_e878245f02974e44a238dbadcae3eb78-3"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"posts/*.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"blog"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"post.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_e878245f02974e44a238dbadcae3eb78-4"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Scratch/*.rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"scratch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"post.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_e878245f02974e44a238dbadcae3eb78-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;This would have been an ideal situation as the Scratch directory is date based and I could have an RSS feed attached to it.  This did not work because there is not enough meta data in the Scratch directory for Nikola to create posts from them.  I may come back to modifying the CreateScratch function in Riv to automatically generate posts if I need to modify code.&lt;/p&gt;
&lt;p&gt;The next thing I tried was to create a Nikola site with pages instead of the posts especially since Riv already automatically creates an index.rst file of the Scratch directory.  Setting the Scratch directory to a pages and then adding that as a section on the menu worked great.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_3111d621479d46b8aa36b88511c78ea6-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;PAGES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_3111d621479d46b8aa36b88511c78ea6-2"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"stories/*.rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"stories"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"story.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_3111d621479d46b8aa36b88511c78ea6-3"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"stories/*.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"stories"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"story.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_3111d621479d46b8aa36b88511c78ea6-4"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Scratch/*.rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"scratch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"story.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_3111d621479d46b8aa36b88511c78ea6-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_3111d621479d46b8aa36b88511c78ea6-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_3111d621479d46b8aa36b88511c78ea6-7"&gt;&lt;/a&gt;&lt;span class="c"&gt;# ...&lt;/span&gt;
&lt;a name="rest_code_3111d621479d46b8aa36b88511c78ea6-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_3111d621479d46b8aa36b88511c78ea6-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;NAVIGATION_LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_3111d621479d46b8aa36b88511c78ea6-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_3111d621479d46b8aa36b88511c78ea6-11"&gt;&lt;/a&gt;        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/scratch/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Notes"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_3111d621479d46b8aa36b88511c78ea6-12"&gt;&lt;/a&gt;        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/categories/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Tags"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_3111d621479d46b8aa36b88511c78ea6-13"&gt;&lt;/a&gt;        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/rss.xml"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"RSS feed"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_3111d621479d46b8aa36b88511c78ea6-14"&gt;&lt;/a&gt;    &lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_3111d621479d46b8aa36b88511c78ea6-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Riv allows for a project index file that is the first file that opens the when the project is opened.  The next thing I waned to do was have Nikola pick this up as the index page.  This is where I ran in to the configuration limits.  Nikola wants all files to be in a subdirectory of the directory containing the conf.py file and by default Riv puts this at the top level.  Riv allows a master_doc option to allow for the master doc to be at another level, but the master_doc option affects all directories including the scratch directory which stopped the Scratch pages.  After a nights sleep I realized that the Riv project did not need to be at the root of Repository.  By changing the Riv project directory to the 'src' directory in my vimrc file I was able to get Riv and Nikola to both interact with my notes without modifying the code of either project.&lt;/p&gt;
&lt;p&gt;My vimrc file looks like this&lt;/p&gt;
&lt;pre class="code vim"&gt;&lt;a name="rest_code_71dc6a74e9494b4eb33e7487be23b2b7-1"&gt;&lt;/a&gt;&lt;span class="c"&gt;"Riv Settings&lt;/span&gt;
&lt;a name="rest_code_71dc6a74e9494b4eb33e7487be23b2b7-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:riv_todo_keywords &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"TODO,DONE;FIXME,FIXED;START,PROCESS,STOP;AR,DONE"&lt;/span&gt;
&lt;a name="rest_code_71dc6a74e9494b4eb33e7487be23b2b7-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:riv_debug&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;a name="rest_code_71dc6a74e9494b4eb33e7487be23b2b7-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:riv_file_link_style &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
&lt;a name="rest_code_71dc6a74e9494b4eb33e7487be23b2b7-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;let&lt;/span&gt; pgtiegs_notes &lt;span class="p"&gt;=&lt;/span&gt; {&lt;span class="s1"&gt;'Name'&lt;/span&gt;:&lt;span class="s2"&gt;"Peter's Notes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'path'&lt;/span&gt;: &lt;span class="s1"&gt;'~/notes/src'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;}
&lt;a name="rest_code_71dc6a74e9494b4eb33e7487be23b2b7-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:riv_projects &lt;span class="p"&gt;=&lt;/span&gt; [pgtiegs_notes]
&lt;/pre&gt;&lt;p&gt;My Nikola conf.py looks like this&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_55593ec6f2d74802bc1e0c73cb36ce25-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;PAGES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_55593ec6f2d74802bc1e0c73cb36ce25-2"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"src/index.rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"story.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_55593ec6f2d74802bc1e0c73cb36ce25-3"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"stories/*.rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"stories"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"story.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_55593ec6f2d74802bc1e0c73cb36ce25-4"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"stories/*.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"stories"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"story.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_55593ec6f2d74802bc1e0c73cb36ce25-5"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"src/Scratch/*.rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"scratch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"story.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_55593ec6f2d74802bc1e0c73cb36ce25-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><guid>https://netpete.github.io/posts/combining-nikola-with-vim-riv.html</guid><pubDate>Thu, 26 Mar 2015 15:22:40 GMT</pubDate></item><item><title>Getting Started with Github and Nikola</title><link>https://netpete.github.io/posts/getting-started-with-github-and-nikola.html</link><dc:creator>Peter Tiegs</dc:creator><description>&lt;div&gt;&lt;p&gt;I finally took the time to get set up with &lt;a class="reference external" href="https://pages.github.com/"&gt;Github&lt;/a&gt; pages and &lt;a class="reference external" href="http://getnikola.com/"&gt;Nikola&lt;/a&gt; blogging.&lt;/p&gt;
&lt;p&gt;I am still a little curious how the git_hub deploy task works, and why it rquires multiple branches.&lt;/p&gt;
&lt;p&gt;I am looking forward to trying out the &lt;a class="reference external" href="http://ipython.org/"&gt;ipython&lt;/a&gt; notebook support and I would like to see if I can created some &lt;a class="reference external" href="http://pydoit.org/"&gt;doit&lt;/a&gt; tasks for publishing to &lt;a class="reference external" href="https://www.tumblr.com/"&gt;Tumblr&lt;/a&gt; and the &lt;a class="reference external" href="https://www.jivesoftware.com/"&gt;Jive&lt;/a&gt; platform.&lt;/p&gt;&lt;/div&gt;</description><guid>https://netpete.github.io/posts/getting-started-with-github-and-nikola.html</guid><pubDate>Tue, 24 Mar 2015 19:39:55 GMT</pubDate></item></channel></rss>